#!/bin/bash -eu
# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

echo "Compiling afl++"

# Build and copy afl++ tools necessary for fuzzing.
pushd $SRC/aflplusplus > /dev/null

# Unset CFLAGS and CXXFLAGS while building AFL since we don't want to slow it
# down with sanitizers.
INITIAL_CXXFLAGS=$CXXFLAGS
INITIAL_CFLAGS=$CFLAGS
unset CXXFLAGS
unset CFLAGS
make clean
AFL_NO_X86=1 PYTHON_INCLUDE=/ make
CFLAGS=$INITIAL_CFLAGS
CXXFLAGS=$INITIAL_CXXFLAGS

# Build afl++ driver with existing CFLAGS, CXXFLAGS.
make -C utils/aflpp_driver
cp libAFLDriver.a $LIB_FUZZING_ENGINE

# Some important projects include libraries, copy those even when they don't
# start with "afl-". Use "sort -u" to avoid a warning about duplicates.
ls afl-* *.txt *.a *.o *.so | sort -u | xargs cp -t $OUT
popd > /dev/null

export CC="$SRC/aflplusplus/afl-clang-fast"
export CXX="$SRC/aflplusplus/afl-clang-fast++"

# Set sane afl++ environment defaults:
# Be quiet, otherwise this can break some builds.
export AFL_QUIET=1
# Several targets run their own tools, so ensure its working.
export AFL_MAP_SIZE=4194304
# No leak errors during builds.
export ASAN_OPTIONS="detect_leaks=0:symbolize=0"
#
# Placeholder for the upcoming afl++ build options roulette
#

echo " done."
